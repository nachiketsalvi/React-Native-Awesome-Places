"use strict";

module.exports = function (_ref) {
  var t = _ref.types;

  return {
    name: "transform-inline-environment-variables",
    visitor: {
      MemberExpression(path, _ref2) {
        var _ref2$opts = _ref2.opts;
        _ref2$opts = _ref2$opts === undefined ? {} : _ref2$opts;
        var include = _ref2$opts.include,
            exclude = _ref2$opts.exclude;

        if (path.get("object").matchesPattern("process.env")) {
          var key = path.toComputedKey();
          if (t.isStringLiteral(key) && (!include || include.indexOf(key.value) !== -1) && (!exclude || exclude.indexOf(key.value) === -1)) {
            path.replaceWith(t.valueToNode(process.env[key.value]));
          }
        }
      }
    }
  };
};